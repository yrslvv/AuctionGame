{"version":3,"sources":["components/UserRegistration.js","components/GifSearch.js","components/Auction.js","App.js","reportWebVitals.js","index.js"],"names":["UserRegistration","_ref","setUsername","name","setName","useState","duration","setDuration","navigate","useNavigate","React","createElement","className","onSubmit","async","e","preventDefault","axios","get","data","post","error","console","type","value","onChange","target","placeholder","required","onClick","delete","alert","GifSearch","username","onGifSelect","searchTerm","setSearchTerm","gifs","setGifs","useEffect","delayDebounceFn","setTimeout","trim","searchUrl","log","response","results","handleSearch","clearTimeout","map","gif","key","id","src","media_formats","nanogif","url","alt","content_description","socket","io","Auction","auction","setAuction","bidAmount","setBidAmount","winner","setWinner","timeLeft","setTimeLeft","chatMessages","setChatMessages","newMessage","setNewMessage","bidError","setBidError","chatEndRef","useRef","endTime","Date","fetchData","on","remainingTime","highestBid","message","prevMessages","slice","scrollToBottom","messages","emit","off","current","scrollIntoView","behavior","amount","minutes","Math","floor","seconds","sortedBids","bids","sort","a","b","picture","bid","index","handleBid","auctionId","_id","msg","startsWith","ref","onKeyDown","gifUrl","App","Router","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.45d1bb6b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './UserRegistration.css';\r\n\r\nconst UserRegistration = ({ setUsername }) => {\r\n  const [name, setName] = useState('');\r\n  const [duration, setDuration] = useState(2); // Default duration to 2 minutes\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setUsername(name);\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/auction');\r\n      if (response.data) {\r\n        navigate('/auction');\r\n      } else {\r\n        await axios.post('http://localhost:5000/api/auction', { duration });\r\n        navigate('/auction');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteAuction = async () => {\r\n    try {\r\n      await axios.delete('http://localhost:5000/api/auction');\r\n      alert('Current auction deleted');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"registration-container\">\r\n      <h1>Enter the Auction</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          placeholder=\"Enter your username\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          value={duration}\r\n          onChange={(e) => setDuration(e.target.value)}\r\n          placeholder=\"Duration (minutes)\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Join Auction</button>\r\n      </form>\r\n      <button onClick={handleDeleteAuction} className=\"delete-button\">Delete Current Auction</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserRegistration;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './GifSearch.css';\r\n\r\nconst GifSearch = ({ username, onGifSelect }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [gifs, setGifs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const handleSearch = async () => {\r\n      if (searchTerm.trim() === '') {\r\n        setGifs([]);\r\n        return;\r\n      }\r\n      try {\r\n        const searchUrl = `https://tenor.googleapis.com/v2/search?q=${searchTerm}&key=AIzaSyCfPz-AXvOA8cnneQlgqNTJPgpyvSNF-1w&client_key=my_test_app&limit=8`;\r\n        console.log(\"Search URL:\", searchUrl); // Add this line\r\n        const response = await axios.get(searchUrl);\r\n        setGifs(response.data.results);\r\n      } catch (error) {\r\n        console.error('Error fetching GIFs:', error);\r\n      }\r\n    };\r\n\r\n    const delayDebounceFn = setTimeout(() => {\r\n      handleSearch();\r\n    }, 300);\r\n\r\n    return () => clearTimeout(delayDebounceFn);\r\n  }, [searchTerm]);\r\n\r\n  return (\r\n    <div className=\"gif-search-container\">\r\n      <input\r\n        type=\"text\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n        placeholder=\"Search GIFs\"\r\n      />\r\n      <div className=\"gif-results\">\r\n        {gifs.map((gif) => (\r\n          <img\r\n            key={gif.id}\r\n            src={gif.media_formats.nanogif.url}\r\n            alt={gif.content_description}\r\n            onClick={() => onGifSelect(gif.media_formats.gif.url, username)}\r\n            className=\"gif-item\"\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifSearch;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\nimport GifSearch from './GifSearch';\r\nimport './Auction.css';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst Auction = ({ username }) => {\r\n  const [auction, setAuction] = useState(null);\r\n  const [bidAmount, setBidAmount] = useState(0);\r\n  const [winner, setWinner] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(0); // in milliseconds\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [bidError, setBidError] = useState('');\r\n  const chatEndRef = useRef(null); // Reference to the end of the chat\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get('http://localhost:5000/api/auction');\r\n      if (response.data) {\r\n        setAuction(response.data);\r\n        if (response.data.endTime) {\r\n          setTimeLeft(new Date(response.data.endTime) - new Date());\r\n        }\r\n      } else {\r\n        setAuction(null);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    socket.on('newBid', (auction) => {\r\n      setAuction(auction);\r\n    });\r\n\r\n    socket.on('timerUpdate', (remainingTime) => {\r\n      setTimeLeft(remainingTime);\r\n    });\r\n\r\n    socket.on('auctionEnd', (highestBid) => {\r\n      setWinner(highestBid);\r\n    });\r\n\r\n    socket.on('newMessage', (message) => {\r\n      setChatMessages(prevMessages => [...prevMessages, message].slice(-15));\r\n      scrollToBottom();\r\n    });\r\n\r\n    socket.on('messages', (messages) => {\r\n      setChatMessages(messages);\r\n      scrollToBottom();\r\n    });\r\n\r\n    socket.on('bidError', (error) => {\r\n      setBidError(error);\r\n    });\r\n\r\n    socket.emit('getMessages');\r\n\r\n    return () => {\r\n      socket.off('newBid');\r\n      socket.off('timerUpdate');\r\n      socket.off('auctionEnd');\r\n      socket.off('newMessage');\r\n      socket.off('messages');\r\n      socket.off('bidError');\r\n    };\r\n  }, []);\r\n\r\n  const handleBid = () => {\r\n    setBidError('');\r\n    socket.emit('bid', { auctionId: auction._id, username, amount: bidAmount });\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (newMessage.trim() !== '') {\r\n      socket.emit('sendMessage', { username, message: newMessage });\r\n      setNewMessage('');\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const handleGifSelect = (gifUrl) => {\r\n    socket.emit('sendMessage', { username, message: gifUrl });\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    if (chatEndRef.current) {\r\n      chatEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  if (!auction) {\r\n    return <p>No active auction. Please create a new auction.</p>;\r\n  }\r\n\r\n  if (winner) {\r\n    return (\r\n      <div className=\"auction-container\">\r\n        <h1>Auction Ended</h1>\r\n        <p>Winner: {winner.username || \"No bids\"} with ${winner.amount !== -1 ? winner.amount : 0}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const minutes = Math.floor(timeLeft / 60000);\r\n  const seconds = Math.floor((timeLeft % 60000) / 1000);\r\n\r\n  const sortedBids = [...auction.bids].sort((a, b) => b.amount - a.amount);\r\n\r\n  return (\r\n    <div className=\"auction-container\">\r\n      <div className=\"timer\">{minutes}:{('0' + seconds).slice(-2)}</div>\r\n      <div className=\"auction-content\">\r\n        <img src={auction.picture} alt=\"Auction Item\" className=\"auction-image\" />\r\n        <div className=\"bidding-section\">\r\n          <div className=\"current-bids\">\r\n            <h3>Current Bids</h3>\r\n            <ul>\r\n              {sortedBids.map((bid, index) => (\r\n                <li key={index}>{bid.username}: ${bid.amount}</li>\r\n              ))}\r\n            </ul>\r\n            {bidError && <p className=\"bid-error\">{bidError}</p>}\r\n            <input\r\n              type=\"number\"\r\n              value={bidAmount}\r\n              onChange={(e) => setBidAmount(e.target.value)}\r\n              placeholder=\"Enter your bid\"\r\n              className=\"bid-input\"\r\n            />\r\n            <button onClick={handleBid} className=\"bid-button\">Place Bid</button>\r\n          </div>\r\n          <div className=\"chat-container\">\r\n            <h3>Chat</h3>\r\n            <div className=\"chat-messages\">\r\n              {chatMessages.map((msg, index) => (\r\n                <div key={index}>\r\n                  {msg.message.startsWith('http') ? (\r\n                    <img src={msg.message} alt=\"GIF\" className=\"chat-gif\" />\r\n                  ) : (\r\n                    <div>\r\n                      <strong>{msg.username}: </strong><span>{msg.message}</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n              <div ref={chatEndRef} />\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              value={newMessage}\r\n              onChange={(e) => setNewMessage(e.target.value)}\r\n              onKeyDown={handleKeyDown}\r\n              placeholder=\"Type a message\"\r\n              className=\"chat-input\"\r\n            />\r\n            <small className=\"enter-to-send\">Press Enter to send message</small>\r\n            <GifSearch onGifSelect={handleGifSelect} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auction;\r\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport UserRegistration from './components/UserRegistration';\nimport Auction from './components/Auction';\n\nconst App = () => {\n  const [username, setUsername] = useState('');\n\n  return (\n    <Router>\n      <Routes>\n        <Route exact path=\"/\" element={<UserRegistration setUsername={setUsername} />} />\n        <Route path=\"/auction\" element={<Auction username={username} />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}